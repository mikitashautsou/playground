version: "3.9"
networks:
  monitoring:
    driver: bridge
services:
  users: #docker run --rm -it -v ${PWD}:/work -w /work -p 5002:5000 aimvector/nodejs:1.0.0 /bin/sh
    container_name: users
    build:
      context: ./users
    ports:
      - 3001:3000
    networks:
      - monitoring
  zookeeper:
    image: wurstmeister/zookeeper  
    restart: unless-stopped  
    ports: 
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports:
      - 9092:9092
    hostname: kafka
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka   
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=test_topic:1:1
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./metrics/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3005:3000
    expose:
      - 3000
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest # use specific version for real projects
    container_name: prometheus
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./metrics:/etc/prometheus
      # - ./metrics:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - monitoring